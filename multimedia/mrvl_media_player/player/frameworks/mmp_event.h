/*
 **                Copyright 2013, MARVELL SEMICONDUCTOR, LTD.
 ** THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL.
 ** NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT
 ** OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE
 ** DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.
 ** THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,
 ** IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.
 **
 ** MARVELL COMPRISES MARVELL TECHNOLOGY GROUP LTD. (MTGL) AND ITS SUBSIDIARIES,
 ** MARVELL INTERNATIONAL LTD. (MIL), MARVELL TECHNOLOGY, INC. (MTI), MARVELL
 ** SEMICONDUCTOR, INC. (MSI), MARVELL ASIA PTE LTD. (MAPL), MARVELL JAPAN K.K.
 ** (MJKK), MARVELL ISRAEL LTD. (MSIL).
 */

#ifndef MMP_EVENT_H
#define MMP_EVENT_H

#include "mmu_macros.h"

using namespace mmu;

namespace mmp {

class MmpEvent {
  public:
    typedef enum {
      MMP_EVENT_UNKNOWN       = 0,
      MMP_EVENT_FLUSH_START,
      MMP_EVENT_FLUSH_STOP,
      MMP_EVENT_ACTIVATE,
      MMP_EVENT_DEACTIVATE,
      MMP_EVENT_UPDATE,
      MMP_EVENT_BUFFER_RENDERED,
    } MmpEventType;

    explicit MmpEvent(MmpEventType type, void *event_data = NULL)
      : type_(type), private_(event_data) {}
    ~MmpEvent() {};
    MmpEventType GetEventType() { return type_; }
    void* GetEventData() { return private_; }

  private:
    MmpEventType type_;
    void *private_;
};

}

#endif