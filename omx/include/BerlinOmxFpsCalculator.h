/*
**                Copyright 2013, MARVELL SEMICONDUCTOR, LTD.
** THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL.
** NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT
** OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE
** DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.
** THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,
** IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.
**
** MARVELL COMPRISES MARVELL TECHNOLOGY GROUP LTD. (MTGL) AND ITS SUBSIDIARIES,
** MARVELL INTERNATIONAL LTD. (MIL), MARVELL TECHNOLOGY, INC. (MTI), MARVELL
** SEMICONDUCTOR, INC. (MSI), MARVELL ASIA PTE LTD. (MAPL), MARVELL JAPAN K.K.
** (MJKK), MARVELL ISRAEL LTD. (MSIL).
*/

#ifndef BERLIN_OMX_FPS_CALCULATOR_H_
#define BERLIN_OMX_FPS_CALCULATOR_H_

#include <BerlinOmxCommon.h>

namespace berlin {

class BerlinOmxFpsCalculator {
public:
  BerlinOmxFpsCalculator();
  ~BerlinOmxFpsCalculator();
  void start(OMX_U64 timeUs);
  OMX_BOOL checkCurrentTimeAndRefreshFps(OMX_U64 curTimeUs);
  void incrementFrameCount();
  void setTotalFrameCount(OMX_U32 totalFrameCount);
  OMX_U32 getLatestFps();

private:
  static OMX_U32 computeFps(OMX_U64 frames, OMX_U64 durationUs);
  OMX_U64 getFrameCount();

private:
  OMX_BOOL mStarted;
  KDThreadMutex *mLock;
  OMX_U32 mFrameCount;
  OMX_U32 mPrevFrameCount;
  OMX_U32 mLatestFps;
  OMX_U64 mTimeUsOfLatestFpsRefresh;
};

}  // namespace Berlin
#endif   // BERLIN_OMX_FPS_CALCULATOR_H_
